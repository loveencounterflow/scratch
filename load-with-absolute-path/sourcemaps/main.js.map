{"version":3,"sources":["main.coffee"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"/source/","sourcesContent":["\n\n\n\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\nnjs_fs                    = require 'fs'\nnjs_os                    = require 'os'\nnjs_cp                    = require 'child_process'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'jizura-load-with-absolute-paths'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nsuspend                   = require 'coffeenode-suspend'\nstep                      = suspend.step\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n$async                    = D.remit_async.bind D\n#...........................................................................................................\nASYNC                     = require 'async'\n# #...........................................................................................................\n# ƒ                         = CND.format_number.bind CND\n# HELPERS                   = require './HELPERS'\n# TYPO                      = HELPERS[ 'TYPO' ]\n# options                   = require './options'\nSEMVER                    = require 'semver'\nCS                        = require 'coffee-script'\noptions_route             = './options.coffee'\n{ CACHE, OPTIONS, }       = require './OPTIONS'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@_compile_options = ->\n  ### TAINT code duplication ###\n  ### TAINT must insert '../' when used from `lib/` ###\n  @options                          = @_eval_coffee_file options_route\n  cache_route                       = @options[ 'cache' ][ 'route' ]\n  @options[ 'cache' ][ 'locator' ]  = cache_locator = njs_path.resolve __dirname, cache_route\n  #.........................................................................................................\n  unless njs_fs.existsSync cache_locator\n    @options[ 'cache' ][ '%self' ] = {}\n    @_save_cache()\n  #.........................................................................................................\n  @options[ 'cache' ][ '%self' ]    = require cache_locator\n  #.........................................................................................................\n  @options[ 'locators' ] = {}\n  for key, route of @options[ 'routes' ]\n    @options[ 'locators' ][ key ] = njs_path.resolve __dirname, route\n  #.........................................................................................................\n  debug '©ed8gv', JSON.stringify @options, null, '  '\n  CACHE.update options\n#...........................................................................................................\n@_compile_options()\n\n#-----------------------------------------------------------------------------------------------------------\n@write_mkts_settings = ( handler ) ->\n  step ( resume ) =>\n    lines             = []\n    settings_locator  = @options[ 'locators' ][ 'settings' ]\n    #.......................................................................................................\n    unless settings_locator?\n      ### TAINT or use default value ###\n      throw new Error \"need option locators/settings\"\n    help \"writing #{settings_locator}\"\n    #-------------------------------------------------------------------------------------------------------\n    lines.push \"\"\n    lines.push \"% #{settings_locator}\"\n    lines.push \"% do not edit this file\"\n    lines.push \"% generated from options\"\n    lines.push \"\"\n    #-------------------------------------------------------------------------------------------------------\n    # DEFS\n    #.......................................................................................................\n    defs = @options[ 'defs' ]\n    lines.push \"\"\n    lines.push \"% DEFS\"\n    if defs?\n      lines.push \"\\\\def\\\\#{name}{#{value}}\" for name, value of defs\n    #-------------------------------------------------------------------------------------------------------\n    # NEWCOMMANDS\n    #.......................................................................................................\n    newcommands = @options[ 'newcommands' ]\n    lines.push \"\"\n    lines.push \"% NEWCOMMANDS\"\n    if newcommands?\n      lines.push \"\\\\newcommand{\\\\#{name}}{#{value}}\" for name, value of newcommands\n    #-------------------------------------------------------------------------------------------------------\n    # FONTS\n    #.......................................................................................................\n    fontspec_version  = yield @read_texlive_package_version 'fontspec', resume\n    use_new_syntax    = SEMVER.satisfies fontspec_version, '>=2.4.0'\n    #.......................................................................................................\n    lines.push \"\"\n    lines.push \"% FONTS\"\n    lines.push \"% assuming fontspec@#{fontspec_version}\"\n    lines.push \"\\\\usepackage{fontspec}\"\n    #.......................................................................................................\n    for { texname, home, filename, } in @options[ 'fonts' ][ 'declarations' ]\n      if use_new_syntax\n        ### TAINT should properly escape values ###\n        lines.push \"\\\\newfontface\\\\#{texname}{#{filename}}[Path=#{home}/]\"\n      else\n        lines.push \"\\\\newfontface\\\\#{texname}[Path=#{home}/]{#{filename}}\"\n    #-------------------------------------------------------------------------------------------------------\n    lines.push \"\"\n    lines.push \"\"\n    #-------------------------------------------------------------------------------------------------------\n    text = lines.join '\\n'\n    whisper text\n    njs_fs.writeFile settings_locator, text, handler\n\n#-----------------------------------------------------------------------------------------------------------\n@read_texlive_package_version = ( package_name, handler ) ->\n  key     = \"texlive-package-versions/#{package_name}\"\n  method  = ( done ) => @_read_texlive_package_version package_name, done\n  CACHE.get @options, key, method, yes, handler\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_read_texlive_package_version = ( package_name, handler ) ->\n  ### Given a `package_name` and a `handler`, try to retrieve that package's info as reported by the TeX\n  Live Manager command line tool (using `tlmgr info ${package_name}`), extract the `cat-version` entry and\n  normalize it so it matches the [Semantic Versioning specs](http://semver.org/). If no version is found,\n  the `handler` will be called with a `null` value instead of a string; however, if a version *is* found but\n  does *not* match the SemVer specs after normalization, the `handler` will be called with an error.\n\n  Normalization steps include removing leading `v`s, trailing letters, and leading zeroes. ###\n  leading_zero_pattern  = /^0+(?!$)/\n  semver_pattern        = /^([0-9]+)\\.([0-9]+)\\.?([0-9]*)$/\n  @read_texlive_package_info package_name, ( error, package_info ) =>\n    return handler error if error?\n    #.......................................................................................................\n    unless ( version = o_version = package_info[ 'cat-version' ] )?\n      warn \"unable to detect version for package #{rpr package_name}\"\n      return handler null, null\n      # return handler new Error \"unable to detect version for package #{rpr package_name}\"\n    #.......................................................................................................\n    version = version.replace /[^0-9]+$/, ''\n    version = version.replace /^v/, ''\n    #.......................................................................................................\n    unless ( match = version.match semver_pattern )?\n      return handler new Error \"unable to parse version #{rpr o_version} of package #{rpr name}\"\n    #.......................................................................................................\n    [ _, major, minor, patch, ] = match\n    ### thx to http://stackoverflow.com/a/2800839/256361 ###\n    major = major.replace leading_zero_pattern, ''\n    minor = minor.replace leading_zero_pattern, ''\n    patch = patch.replace leading_zero_pattern, ''\n    major = if major.length > 0 then major else '0'\n    minor = if minor.length > 0 then minor else '0'\n    patch = if patch.length > 0 then patch else '0'\n    #.......................................................................................................\n    handler null, \"#{major}.#{minor}.#{patch}\"\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@read_texlive_package_info = ( package_name, handler ) ->\n  command     = 'tlmgr'\n  parameters  = [ 'info', package_name, ]\n  input       = D.spawn_and_read_lines command, parameters\n  Z           = {}\n  pattern     = /^([^:]+):(.*)$/\n  #.........................................................................................................\n  input\n    #.......................................................................................................\n    .pipe $ ( line, send ) =>\n      return if line.length is 0\n      match = line.match pattern\n      return send.error new Error \"unexpected line: #{rpr line}\" unless match?\n      [ _, name, value, ] = match\n      name                = name.trim()\n      value               = value.trim()\n      Z[ name ]           = value\n    #.......................................................................................................\n    .pipe D.$on_end -> handler null, Z\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@write_pdf = ( layout_info, handler ) ->\n  #.........................................................................................................\n  pdf_command         = njs_path.join __dirname, 'pdf-from-tex.sh' # layout_info[ 'pdf-command'          ]\n  tmp_home            = __dirname # layout_info[ 'tmp-home'             ]\n  tex_locator         = njs_path.join __dirname, 'load-with-absolute-path.tex' # layout_info[ 'tex-locator'          ]\n  aux_locator         = njs_path.join __dirname, 'load-with-absolute-path.aux' # layout_info[ 'aux-locator'          ]\n  # pdf_source_locator  = layout_info[ 'pdf-source-locator'   ]\n  # pdf_target_locator  = layout_info[ 'pdf-target-locator'   ]\n  last_digest         = null\n  last_digest         = CND.id_from_route aux_locator if njs_fs.existsSync aux_locator\n  digest              = null\n  count               = 0\n  #.........................................................................................................\n  pdf_from_tex = ( next ) =>\n    count += 1\n    urge \"run ##{count} #{pdf_command}\"\n    whisper \"$1: #{tmp_home}\"\n    whisper \"$2: #{tex_locator}\"\n    CND.spawn pdf_command, [ tmp_home, tex_locator, ], ( error, data ) =>\n      error = undefined if error is 0\n      if error?\n        alert error\n        return handler error\n      digest = CND.id_from_route aux_locator\n      if digest is last_digest\n        echo ( CND.grey badge ), CND.lime \"done.\"\n        # layout_info[ 'latex-run-count' ] = count\n        ### TAINT move pdf to layout_info[ 'source-home' ] ###\n        handler null\n      else\n        last_digest = digest\n        next()\n  #.........................................................................................................\n  ASYNC.forever pdf_from_tex\n\n#-----------------------------------------------------------------------------------------------------------\n@test_versions = ->\n  tasks = []\n  package_names = \"\"\"\n    xcolor\n    fontspec\n    leading\n    pbox\n    polyglossia\n    bxjscls\n    pawpict\n    biblatex-juradiss\n    lm\n    ametsoc\n    bibleref-french\n    xnewcommand\n    semantic\n    multiobjective\n    shipunov\n    splitindex\n    chkfloat\n    crbox\n    svgcolor\n    pstools\n    sty2dtx\n    readarray\n    lpic\n    lhelp\n    newvbtm\n    mathpazo\n    dot2texi\n    lcdftypetools\n    pst-fun\n    pst-tools\n    mex\n    flowchart\n    hfoldsty\n    latex-git-log\n    \"\"\".split /\\s+/\n  for name in package_names\n    do ( name ) =>\n      tasks.push ( done ) => @_read_texlive_package_version name, ( error, version ) =>\n        throw error if error?\n        if version?\n          urge name, ( CND.cyan version ), ( CND.truth SEMVER.valid version ), ( CND.truth SEMVER.satisfies version, '>=2.4.0' )\n        done()\n  # for name in package_names\n  #   do ( name ) =>\n  #     tasks.push ( done ) => @read_texlive_package_info name, ( error, package_info ) =>\n        # throw error if error?\n  #       urge name\n  #       help package_info\n  #       done()\n  ASYNC.parallelLimit tasks, 10, -> help \"ok\"\n  # ASYNC.series tasks, -> help \"ok\"\n\n#-----------------------------------------------------------------------------------------------------------\n@main = ->\n  settings_tex_route = njs_path.join __dirname, 'mkts-settings.tex'\n  settings_tex = \"\"\"\n  \\\\def\\\\foobar{example for a TeX-def macro}\n  \\\\newcommand{\\\\mktsPathsMktsHome}{/Volumes/Storage/io/jizura/tex-inputs}\n  \\\\newcommand{\\\\mktsPathsFontsHome}{/Volumes/Storage/io/jizura-fonts/fonts}\n  \"\"\"\n  njs_fs.writeFileSync settings_tex_route, settings_tex\n  @write_pdf null, ( error ) =>\n    throw error if error?\n    help \"ok\"\n\n\n\n############################################################################################################\nunless module.parent?\n  # @test_versions()\n  # debug '©q9kwu', cached_settings = @_get_cached_settings()\n  # help @_eval_coffee_file options_route\n  # debug '©DWBBg', @options[ 'cache' ][ '%self' ][ @options[ 'cache' ][ '%self' ][ 'sysid' ] ]\n  # @_read_texlive_package_version 'fontspec', ( error, version ) =>\n  #   throw error if error?\n  #   if version?\n  #     @options[ 'cache' ][ '%self' ][ @options[ 'cache' ][ '%self' ][ 'sysid' ] ]\n\n  # @_get_cache 'foobar', ( -> 42 )\n  step ( resume ) =>\n    version = yield @read_texlive_package_version 'fontspec', resume\n    # help \"fontspec@#{version}\"\n    yield @write_mkts_settings resume\n    @main()\n    # help \"ok\"\n\n\n\n\n\n\n\n\n\n"]}